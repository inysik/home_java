Задание на дом :
• Подумать над структурой класса Ноутбук для магазина техники - выделить поля и методы. Реализовать в java.
• Создать множество ноутбуков.
• Написать метод, который будет запрашивать у пользователя критерий (или критерии) фильтрации и выведет ноутбуки, отвечающие фильтру. Критерии фильтрации можно хранить в Map. Например:
“Введите цифру, соответствующую необходимому критерию:
1 - ОЗУ
2 - Объем ЖД
3 - Операционная система
4 - Цвет …


import java.util.*;

public class Laptop {
    private String brand;
    private String model;
    private int ram;
    private int storage;
    private String os;
    private String color;
    private double price;

    public Laptop(String brand, String model, int ram, int storage, String os, String color, double price) {
        this.brand = brand;
        this.model = model;
        this.ram = ram;
        this.storage = storage;
        this.os = os;
        this.color = color;
        this.price = price;
    }

    public String getBrand() {
        return brand;
    }

    public String getModel() {
        return model;
    }

    public int getRam() {
        return ram;
    }

    public int getStorage() {
        return storage;
    }

    public String getOs() {
        return os;
    }

    public String getColor() {
        return color;
    }

    public double getPrice() {
        return price;
    }
}

public class Main {
    public static void main(String[] args) {
        Set<Laptop> laptops = new HashSet<>();

        laptops.add(new Laptop("Lenovo", "Ideapad 330", 8, 256, "Windows 10", "Grey", 599.99));
        laptops.add(new Laptop("Asus", "VivoBook S15", 16, 512, "Windows 11", "Green", 899.99));
        laptops.add(new Laptop("HP", "Pavilion x360", 8, 512, "Windows 10", "Silver", 749.99));

        filterLaptops(laptops);
    }

    public static void filterLaptops(Set<Laptop> laptops) {
        Scanner scanner = new Scanner(System.in);
        Map<Integer, Object> filters = new HashMap<>();

        System.out.println("Введите цифру, соответствующую необходимому критерию:");
        System.out.println("1 - ОЗУ");
        System.out.println("2 - Объем ЖД");
        System.out.println("3 - Операционная система");
        System.out.println("4 - Цвет");

        int filterOption = scanner.nextInt();

        switch (filterOption) {
            case 1:
                System.out.print("Введите количество ОЗУ (ГБ): ");
                int ram = scanner.nextInt();
                filters.put(1, ram);
                break;

            case 2:
                System.out.print("Введите объем жесткого диска (ГБ): ");
                int storage = scanner.nextInt();
                filters.put(2, storage);
                break;

            case 3:
                System.out.print("Введите операционную систему: ");
                String os = scanner.next();
                filters.put(3, os);
                break;

            case 4:
                System.out.print("Введите цвет: ");
                String color = scanner.next();
                filters.put(4, color);
                break;

            default:
                System.out.println("Некорректный ввод!");
                break;
        }

        for (Laptop laptop : laptops) {
            boolean isMatched = true;
            for (Integer key : filters.keySet()) {
                Object value = filters.get(key);
                switch (key) {
                    case 1:
                        if (laptop.getRam() != (int) value) {
                            isMatched = false;
                        }
                        break;

                    case 2:
                        if (laptop.getStorage() != (int) value) {
                            isMatched = false;
                        }
                        break;

                    case 3:
                        if (!laptop.getOs().equalsIgnoreCase((value.toString()))) {
                            isMatched = false;
                        }
                         break;
                    case 4:
                        if (!laptop.getColor().equalsIgnoreCase((value.toString()))) {
                            isMatched = false;
                        }
                        break;
            }
        }
        if (isMatched) {
            System.out.println(laptop.getBrand() + " " + laptop.getModel() + " - Цена: " + laptop.getPrice());
        }
    }
}

///другой файл laptop

public class Laptop {
    private String brand;
    private String model;
    private int ram;
    private int storage;
    private String os;
    private String color;
    private double price;

    public Laptop(String brand, String model, int ram, int storage, String os, String color, double price) {
        this.brand = brand;
        this.model = model;
        this.ram = ram;
        this.storage = storage;
        this.os = os;
        this.color = color;
        this.price = price;
    }

    public String getBrand() {
        return brand;
    }

    public String getModel() {
        return model;
    }

    public int getRam() {
        return ram;
    }

    public int getStorage() {
        return storage;
    }

    public String getOs() {
        return os;
    }

    public String getColor() {
        return color;
    }

    public double getPrice() {
        return price;
    }
}



/// файл main


import java.util.*;

public class Main {
    public static void main(String[] args) {
        // Создаем множество ноутбуков
        Set<Laptop> laptops = new HashSet<>();
        laptops.add(new Laptop("Lenovo", "IdeaPad 5", 8, 512, "Windows 10", "Серый", 49999.0));
        laptops.add(new Laptop("Asus", "VivoBook S15", 16, 1024, "Windows 11", "Золотой", 79999.0));
        laptops.add(new Laptop("Apple", "MacBook Air", 16, 512, "MacOS", "Серебристый", 109999.0));
        laptops.add(new Laptop("HP", "Pavilion", 12, 256, "Windows 10", "Черный", 34999.0));
        laptops.add(new Laptop("Dell", "XPS 13", 16, 512, "Windows 10", "Белый", 79999.0));

        // Вызываем метод фильтрации ноутбуков
        filterLaptops(laptops);
    }

    public static void filterLaptops(Set<Laptop> laptops) {
        // Создаем объект Scanner для считывания ввода пользователя
        Scanner scanner = new Scanner(System.in);

        // Создаем Map для хранения критериев фильтрации
        Map<Integer, Object> filters = new HashMap<>();

        // Выводим список критериев фильтрации и запрашиваем у пользователя номер критерия
        System.out.println("Выберите критерий для фильтрации:");
        System.out.println("1 - Оперативная память");
        System.out.println("2 - Объем жесткого диска");
        System.out.println("3 - Операционная система");
        System.out.println("4 - Цвет корпуса");
        int filterNumber = scanner.nextInt();

        // Запрашиваем дополнительную информацию у пользователя, соответствующую выбранному критерию
        switch (filterNumber) {
            case 1:
                System.out.println("Введите количество оперативной памяти (Гб):");
                int ram = scanner.nextInt();
                filters.put(filterNumber, ram);
                break;

            case 2:
                System.out.println("Введите объем жесткого диска (Гб):");
                int storage = scanner.nextInt();
                filters.put(filterNumber, storage);
                break;
        case 3:
            System.out.println("Введите операционную систему:");
            String os = scanner.next();
            filters.put(filterNumber, os);
            break;

        case 4:
            System.out.println("Введите цвет корпуса:");
            String color = scanner.next();
            filters.put(filterNumber, color);
            break;

        default:
            System.out.println("Выбран некорректный критерий.");
            return;
    }

    // Фильтруем ноутбуки по выбранным критериям
    Set<Laptop> filteredLaptops = new HashSet<>(laptops);
    for (Map.Entry<Integer, Object> entry : filters.entrySet()) {
        switch (entry.getKey()) {
            case 1:
                filteredLaptops.removeIf(laptop -> laptop.getRam() != (int) entry.getValue());
                break;

            case 2:
                filteredLaptops.removeIf(laptop -> laptop.getStorage() != (int) entry.getValue());
                break;

            case 3:
                filteredLaptops.removeIf(laptop -> !laptop.getOs().equals(entry.getValue()));
                break;

            case 4:
                filteredLaptops.removeIf(laptop -> !laptop.getColor().equals(entry.getValue()));
                break;
        }
    }

    // Выводим отфильтрованные ноутбуки
    System.out.println("Найденные ноутбуки:");
    for (Laptop laptop : filteredLaptops) {
        System.out.println(laptop.getBrand() + " " + laptop.getModel() + " - " + laptop.getPrice() + " руб.");
    }
}

